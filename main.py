import time
import config
import random
from typing import Union
from vk_api import VkApi, ApiError


class Main:
    vk_session: VkApi
    category_id: str

    def __init__(self):
        self.vk_session = VkApi(token=str(config.access_token))
        self.check_access_token()
        self.get_newsfeed_id()
        self.start_bot()

    def check_access_token(self):
        try:
            user = self.vk_session.method("users.get")
            if len(user) <= 0:
                raise ApiError(self.vk_session, None, None, None, {"error_code": -1})
        except ApiError:
            exit("‚ùóÔ∏è –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π —Ç–æ–∫–µ–Ω.")

    def get_newsfeed(self, params: Union[dict, None] = None):
        if params is None:
            params = {}

        return self.vk_session.method("newsfeed.getCustom", params)

    def get_newsfeed_id(self):
        print("‚öôÔ∏è –û–ø—Ä–µ–¥–µ–ª—è—é ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –≤ –∫–æ—Ç–æ—Ä–æ–π –í—ã —ç–∫—Å–ø–µ—Ä—Ç.")

        category_id = self.vk_session.method("execute", {
            "code": '''
                var category_id = 2;
                
                while(category_id < 14) {
                   var newsfeed = API.newsfeed.getCustom({ "count": 3, "feed_id": 'discover_category/'+category_id });
                    if(newsfeed.items[1].rating != null && newsfeed.items[2].rating != null && newsfeed.items[3].rating != null){
                         return category_id;
                    }
                    
                     category_id = category_id+1;
                }
                
                return 0;
            '''
        })
        if category_id == 0:
            exit(f"üìõ –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –≤ –∫–æ—Ç–æ—Ä–æ–π –í—ã —ç–∫—Å–ø–µ—Ä—Ç.")
        elif category_id != 7 and not config.alt_categories:
            exit(f"üìõ –î–ª—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –æ—Ç IT –∫–∞—Ç–µ–≥–æ—Ä–∏–π –±–æ—Ç –ø–æ–∫–∞ –Ω–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω, –Ω–æ –í—ã –º–æ–∂–µ—Ç–µ –µ–≥–æ –≤–∫–ª—é—á–∏—Ç—å —Å –ø–æ–º–æ—â—å—é –∫–æ–Ω—Ñ–∏–≥–∞.")

        self.category_id = f'discover_category/{category_id}'
        print(f"‚úÖ ID —É—Å–ø–µ—à–Ω–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω. ({category_id})\n")

    def start_bot(self):
        _type = input("‚öôÔ∏è –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É.\n–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ —Ä–µ–∂–∏–º–æ–≤ —Ä–∞–±–æ—Ç—ã (1 - —Ñ–∞—Ä–º, 2 - —É–º–Ω–æ–µ –æ—Ü–µ–Ω–∏–≤–∞–Ω–∏–µ):")
        if _type not in ["1", "2"]:
            exit("‚õîÔ∏è –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –æ—Ç–º–µ–Ω—ë–Ω.")

        start_from = ""
        while True:
            result = self.get_newsfeed({"count": 50, "feed_id": self.category_id, "start_from": start_from, "fields": "verified"})
            for item in result['items']:
                if item.get('type') == "expert_card":
                    continue  # –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç —ç—Ç–æ –∫–∞—Ä—Ç–æ—á–∫–∞ —ç–∫—Å–ø–µ—Ä—Ç–∞
                elif item.get('rating') is None:
                    continue  # –ï—Å–ª–∏ –Ω–µ—Ç –æ–±—ä–µ–∫—Ç–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –æ—Ü–µ–Ω–∏–≤–∞–Ω–∏–∏
                elif not item.get('rating').get('can_change'):
                    continue  # –ï—Å–ª–∏ –º—ã –Ω–µ –º–æ–∂–µ–º –º–µ–Ω—è—Ç—å —Ä–µ–π—Ç–∏–Ω–≥
                elif item.get('rating').get('rated') != 0:
                    continue  # –ï—Å–ª–∏ —Ä–µ–π—Ç–∏–Ω–≥ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω

                if _type == "1":
                    try:
                        self.vk_session.method("newsfeed.setPostVote",
                                               {"owner_id": item['source_id'], "post_id": item['post_id'],
                                                "new_vote": -1})
                        print(
                            f"‚ûï –ó–∞–ø–∏—Å–∏ https://vk.com/wall{item['source_id']}_{item['post_id']} –±—ã–ª–∞ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –æ—Ü–µ–Ω–∫–∞.")
                    except ApiError:
                        print(
                            f"‚õîÔ∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ü–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å wall{item['source_id']}_{item['post_id']}.\n\n‚öôÔ∏è –î–µ–ª–∞—é –ø–µ—Ä–µ—Ä—ã–≤...\n")
                        time.sleep(random.randint(300, 900))

                    time.sleep(random.randint(int(config.sleep_time / 3), int(config.sleep_time)))
                    continue

                rate = 1

                ban = {
                    "–ø—Ä–æ–¥–∞—é": 1, "–ø—Ä–æ–¥–∞–º": 1, "–ø—Ä–æ–º–æ–∫–æ–¥": 0.5, "–ø–µ—Ä–µ—Ö–æ–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ": 0.5, "–≤ —ç—Ç–æ–π –≤–µ—Ä—Å–∏–∏": 1, "–∏–≥—Ä—É": 0.1, "–∏–≥—Ä–∞": 0.1,
                    "—Ç–æ—Ä–≥ ": 1, "–≤–æ–ø—Ä–æ—Å": 0.2, "–ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ": 0.75, "–º–∞–≥–∞–∑–∏–Ω": 0.3, "—É–∑–æ": 0.5, "–±—é–¥–∂–µ—Ç": 0.75,
                    "—á–∏—Ç–∞—Ç—å –¥–∞–ª–µ–µ": 0.45, "freelance.ru": 1, "price": 0.75, "#aliexpress": 0.65, "—Å–∫–∏–¥–∫–∞": 0.5, "—Å–∫–∏–¥–∫–æ–π": 0.5, "—Å–∫–∏–¥–∫–∏": 0.5,
                    "–ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏": 0.6, "—Å–µ—Ç–∞–ø": 0.5, "—Å–±–æ—Ä–∫–∞ –ø–∫": 0.6, "—Å–±–æ—Ä–∫–∞ –∫–æ–º–ø–∞": 0.6, "—Å–±–æ—Ä–∫–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞": 0.6, "–ø—Ä–æ–¥–∞—ë–º": 1, "–ø—Ä–æ–¥–∞–µ–º": 1,
                    "‚ôÇ": 1, "–∫—É–ø–æ–Ω": 0.5, "–ø—Ä–æ–¥–∞–≤–µ—Ü": 0.4, "–ø—Ä–æ–¥–∞–≤—Ü–∞": 0.4, "—Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞": 0.5, "—Ç–æ—Ä–≥.": 1, "—Ç–æ—Ä–≥,": 1, "—Ç–æ—Ä–≥!": 1, "—Ç–æ—Ä–≥:": 1, "—Ç–æ—Ä–≥;": 1,
                    "aliclick.": 1, "#appstorrent": 0.6
                }
                if len(item.get('text')) > 0:
                    for b in ban.keys():
                        if str(item.get('text')).lower().find(b) != -1:
                            rate -= ban[b]

                if len(item.get('text')) <= 120:
                    if item.get('attachments') is None:
                        rate -= len(item.get('text')) // 25
                    else:
                        rate -= len(item.get('text')) // 50

                if item.get('attachments') is not None:
                    for attach in item.get('attachments'):
                        _type = attach.get('type')
                        if attach.get(_type) is not None:
                            if attach.get(_type).get('caption') in ["aliexpress.ru", "youla.ru"]:
                                rate -= 1
                        elif _type == "article":
                            rate += 0.6

                group = [group for group in result.get('groups') if group.get('id') == item.get('source_id')]
                if len(group) >= 1:
                    group = group[0]
                    ban_names = [
                        "–±–∞—Ä–æ—Ö–æ–ª–∫–∞", "–ø—Ä–æ–¥–∞–º", "–∫—É–ø–ª—é", "–ø—Ä–æ–¥–∞–∂–∞", "–ø–æ–∫—É–ø–∫–∞", "–æ–±—ä—è–≤–ª–µ–Ω–∏—è", "—á–∞—Å—Ç–Ω–∞—è –≥—Ä—É–ø–ø–∞"
                    ]

                    for ban_name in ban_names:
                        if str(group.get('name')).lower().find(ban_name) != -1:
                            rate -= 1

                    if group.get('verified') == 1:
                        rate += 1

                try:
                    if rate >= 0.5:
                        self.vk_session.method("newsfeed.setPostVote",
                                               {"owner_id": item['source_id'], "post_id": item['post_id'],
                                                "new_vote": 1})
                        print(
                            f"‚úÖ –ë—ã–ª–∞ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ –æ—Ü–µ–Ω–µ–Ω–∞ –∑–∞–ø–∏—Å—å https://vk.com/wall{item['source_id']}_{item['post_id']}. ({rate})")
                    else:
                        self.vk_session.method("newsfeed.setPostVote",
                                               {"owner_id": item['source_id'], "post_id": item['post_id'],
                                                "new_vote": -1})
                        print(
                            f"üö∑ –ë—ã–ª–∞ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ –æ—Ü–µ–Ω–µ–Ω–∞ –∑–∞–ø–∏—Å—å https://vk.com/wall{item['source_id']}_{item['post_id']}. ({rate})")
                except ApiError:
                    print(
                        f"‚õîÔ∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ü–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å wall{item['source_id']}_{item['post_id']}. ({rate})\n\n‚öôÔ∏è –î–µ–ª–∞—é –ø–µ—Ä–µ—Ä—ã–≤...\n")
                    time.sleep(random.randint(300, 900))

                time.sleep(random.randint(int(config.sleep_time/3), int(config.sleep_time)))

            start_from = result.get('next_from')


Main()
